import React, { useState, useContext } from "react";

//Style
import { makeStyles } from "@material-ui/core/styles";

//Component
//--> Drawer
import SideDrawer from "../../components/Drawer/SideDrawer";
//--> Cover
import { Info, Error, Success } from "../../components/Alert/Alert";
//--> Forms
import Forms from "../../components/Forms/Forms";
//--> Feeds
import Feeds from "../../components/Forms/Feeds";

//Context
import { FeedContext, FeedActionContext } from "../../context/FeedbackContext";

const useStyles = makeStyles((theme) => ({
  content: {
    flexGrow: 1,
    flex: 1,
    padding: theme.spacing(3),
  },
  toolbar: theme.mixins.toolbar,
}));

function Feedback() {
  const classes = useStyles();

  //Context
  const { feedbacks } = useContext(FeedContext);
  const { handleFeedbackSubmit } = useContext(FeedActionContext);

  let date = new Date();
  //   date = `${date.getFullYear()}-${
  //     date.getMonth() < 9 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1
  //   }-${date.getDate()}T${date.getHours()}:${
  //     date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes()
  //   }`;

  console.log("Date Time => ", date);
  //States
  //--> Forms
  const [feedText, setFeedText] = useState("");
  //--> Alert
  const [err, setErr] = useState("");
  const [success, setSuccess] = useState("");
  const [alertTitle, setAlertTitle] = useState("");

  const TextBoxes = [
    {
      label: "Your Feedback",
      onChange: setFeedText,
      value: feedText,
      multiline: true,
    },
  ];

  //--> Regester Agent Work Start
  const handleSubmit = () => {
    if (feedText) {
      handleFeedbackSubmit(feedText, setAlertTitle, setErr, setSuccess);
      setTimeout(() => {
        setFeedText("");
      }, 1000);
    } else {
      setErr("Please fill in all input box with required information!");
      setTimeout(() => {
        setErr("");
      }, 10000);
    }
  };

  //--> Handle Alert Start
  const Alert = err ? Error : success ? Success : null;
  const alert = err ? err : success ? success : null;
  //--> Handle Alert End

  return (
    <div style={{ display: "flex", backgroundColor: "#F3F4F7" }}>
      <SideDrawer />
      <div style={{ flex: 1 }}>
        <div className={classes.toolbar} />
        {/* <Cover title="Agents Feedback" /> */}
        {alert !== null ? (
          <Alert
            title={alertTitle}
            msg={alert}
            style={{ margin: "0px 30px" }}
          />
        ) : null}
        <div className={classes.content}>
          <Forms
            label="Enter your Feedback:"
            TextBoxes={TextBoxes}
            onSubmit={handleSubmit}
          />
          <div
            style={{
              display: "flex",
              flexFlow: "row wrap",
              justifyContent: "center",
              alignItems: "center",
            }}
          >
            {feedbacks.length !== 0 ? (
              feedbacks.map((data) => {
                return <Feeds data={data} />;
              })
            ) : (
              <Info
                style={{ flex: 1 }}
                title="Generate Feedback"
                msg="There is no feedback generated by your team."
              />
            )}
          </div>
        </div>
      </div>
    </div>
  );
}

export default Feedback;
